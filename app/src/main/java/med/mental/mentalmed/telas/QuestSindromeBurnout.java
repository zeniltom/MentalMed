package med.mental.mentalmed.telas;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.widget.Button;import android.widget.ListView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;import dmax.dialog.SpotsDialog;import med.mental.mentalmed.R;import med.mental.mentalmed.adapter.PerguntaSindromeBurnoutAdapter;import med.mental.mentalmed.config.ConfiguracaoFirebase;import med.mental.mentalmed.config.Preferencias;import med.mental.mentalmed.model.PerguntaBurnout;public class QuestSindromeBurnout extends AppCompatActivity {    private SpotsDialog progressDialog;    private ListView lista_perguntas_sindrome_burnout;    private Button bt_proximo;    private final List<PerguntaBurnout> listaDePerguntas = new ArrayList<>();    private PerguntaSindromeBurnoutAdapter adapter;    private final DatabaseReference referenciaQuestSindromeBurnout = ConfiguracaoFirebase.getFirebase().child("questionarioSindromeBurnout");    private String idUsuario = "";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_quest_sindrome_burnout);        carregarComponentes();        carregarPreferencias();        bt_proximo.setOnClickListener(view -> avancarInformarCondicao());    }    private void avancarInformarCondicao() {        List<PerguntaBurnout> resultadosQuestSindromeBurnout = new ArrayList<>(PerguntaSindromeBurnoutAdapter.resultados);        try {            salvarFirebase(resultadosQuestSindromeBurnout);            Intent intent = new Intent(this, InformarCondicaoActivity.class);            startActivity(intent);        } catch (Exception e) {            msg("Erro: " + e.getLocalizedMessage() + ". Consulte o suporte!");            e.printStackTrace();        }    }    private void salvarFirebase(List<PerguntaBurnout> resultadosQuestSindromeBurnout) {        //Salvar no Firebase        for (PerguntaBurnout perguntaBurnout : resultadosQuestSindromeBurnout) {            referenciaQuestSindromeBurnout.child(idUsuario).child(String.valueOf(perguntaBurnout.getId()))                    .setValue(perguntaBurnout).addOnSuccessListener(aVoid -> {                //Salvar nas PreferÃªncias                Preferencias preferencias = new Preferencias(QuestSindromeBurnout.this);                preferencias.salvarSindromeBurnout(resultadosQuestSindromeBurnout);            });        }    }    private void msg(String texto) {        Toast.makeText(getApplicationContext(), texto, Toast.LENGTH_SHORT).show();    }    private void carregarComponentes() {        progressDialog = new SpotsDialog(this, "Carregando...", R.style.dialogEmpregosAL);        progressDialog.setCancelable(false);        progressDialog.show();        lista_perguntas_sindrome_burnout = findViewById(R.id.lista_perguntas_sindrome_burnout);        bt_proximo = findViewById(R.id.bt_proximo);    }    private void carregarPreferencias() {        Preferencias preferencias = new Preferencias(QuestSindromeBurnout.this);        if (preferencias.getIdUsuario() != null) idUsuario = preferencias.getIdUsuario();        referenciaQuestSindromeBurnout.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                listaDePerguntas.clear();                for (DataSnapshot dados : dataSnapshot.child(idUsuario).getChildren()) {                    PerguntaBurnout perguntaBurnout = dados.getValue(PerguntaBurnout.class);                    listaDePerguntas.add(perguntaBurnout);                }                adapter = new PerguntaSindromeBurnoutAdapter(getApplicationContext(), listaDePerguntas);                lista_perguntas_sindrome_burnout.setAdapter(adapter);                adapter.notifyDataSetChanged();                Log.i("#CARREGAR QUESTSINDROMEBURNOUTACTIVITY", listaDePerguntas.size() > 0 ? "OK" : "ERRO");                if (progressDialog.isShowing()) progressDialog.dismiss();            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });    }}